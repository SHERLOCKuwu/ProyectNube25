name: CI/CD Miel Dorada

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PORT: 3001

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run Backend Tests
        env:
          DB_URL: ${{ secrets.DB_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          if [ -f "Backend/test/*.test.js" ]; then
            npm test
          else
            echo "⚠️ No hay tests - Continuando..."
          fi

      - name: Prepare Frontend
        run: |
          cd Frontend
          mkdir -p dist
          [ -d "paginas" ] && cp -r paginas/*.html dist/ || cp -r *.html dist/ || echo "⚠️ No hay HTML"
          for folder in estilos css js imagenes; do
            [ -d "$folder" ] && cp -r "$folder" dist/
          done

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: |
            Backend/
            Frontend/dist/
            package.json

      - name: Deploy to Railway
        if: github.ref == 'refs/heads/main'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
        run: |
          # Instalar CLI si no está presente
          if ! command -v railway &> /dev/null; then
            npm install -g @railway/cli
          fi

          # Configurar autenticación
          echo "$RAILWAY_TOKEN" | railway login
          
          # Enlazar proyecto
          railway link $RAILWAY_PROJECT_ID
          
          # Realizar despliegue
          railway up --service backend --environment production

      - name: Send Email Notification
        if: always()
        run: |
          curl -X POST \
            "https://api.sendgrid.com/v3/mail/send" \
            -H "Authorization: Bearer ${{ secrets.SENDGRID_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "personalizations": [{
                "to": [{"email": "${{ secrets.NOTIFICATION_EMAIL }}"}],
                "subject": "Resultado del despliegue: ${{ job.status }}"
              }],
              "from": {"email": "noreply@miempresa.com"},
              "content": [{
                "type": "text/plain",
                "value": "El despliegue de Miel Dorada ha ${{ job.status }}\n\nDetalles:\n- Repositorio: ${{ github.repository }}\n- Rama: ${{ github.ref }}\n- Ejecución: ${{ github.run_id }}\n\nVer detalles: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              }]
            }'

      - name: Send Teams Notification
        if: always()
        run: |
          if [[ ! "${{ secrets.TEAMS_WEBHOOK_URI }}" =~ ^https://.*\.webhook\.office\.com ]]; then
            echo "⚠️ Webhook URI no válido"
            exit 0
          fi
          
          JSON_PAYLOAD=$(jq -n \
            --arg status "${{ job.status }}" \
            --arg repo "${{ github.repository }}" \
            --arg branch "${{ github.ref }}" \
            --arg run_url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --arg run_number "${{ github.run_number }}" \
            --arg color "$(if [ "${{ job.status }}" == "success" ]; then echo "2EB886"; else echo "A30200"; fi)" \
            '{
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": $color,
              "summary": "Resultado del despliegue Miel Dorada",
              "title": "Despliegue Miel Dorada - \($status)",
              "text": "**Estado:** \($status)<br>**Repositorio:** \($repo)<br>**Rama:** \($branch)<br>**Ejecución:** [\($run_number)](\($run_url))",
              "potentialAction": [{
                "@type": "OpenUri",
                "name": "Ver Detalles",
                "targets": [{
                  "os": "default",
                  "uri": $run_url
                }]
              }]
            }')
          
          curl -X POST \
            "${{ secrets.TEAMS_WEBHOOK_URI }}" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD"