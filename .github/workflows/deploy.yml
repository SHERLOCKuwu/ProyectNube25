name: CI/CD Miel Dorada

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PORT: 3001

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run Backend Tests
        env:
          DB_URL: ${{ secrets.DB_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          if [ -f "Backend/test/*.test.js" ]; then
            npm test
          else
            echo "⚠️ No hay tests - Continuando..."
          fi

      - name: Prepare Frontend
        run: |
          cd Frontend
          mkdir -p dist
          [ -d "paginas" ] && cp -r paginas/*.html dist/ || cp -r *.html dist/ || echo "⚠️ No hay HTML"
          for folder in estilos css js imagenes; do
            [ -d "$folder" ] && cp -r "$folder" dist/
          done

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: |
            Backend/
            Frontend/dist/
            package.json

      - name: Deploy via Railway API
        run: |
          curl -X POST "https://api.railway.app/v1/projects/${{ secrets.RAILWAY_PROJECT_ID }}/deployments" \
            -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"serviceId":"backend"}'

      - name: Send Teams Notification
        if: always()
        run: |
          # Configuración del mensaje
          if [ "${{ job.status }}" == "success" ]; then
            COLOR="2EB886"
            EMOJI="✅"
            STATUS_TEXT="ÉXITO"
          else
            COLOR="A30200"
            EMOJI="❌"
            STATUS_TEXT="FALLO"
          fi

          # Crear payload JSON
          JSON_PAYLOAD=$(jq -n \
            --arg status "${{ job.status }}" \
            --arg repo "${{ github.repository }}" \
            --arg run_url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            '{
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": "'"$COLOR"'",
              "title": "'"$EMOJI Despliegue de $repo - $STATUS_TEXT $EMOJI"'",
              "text": "**Estado:** $STATUS_TEXT<br>**Repositorio:** $repo<br>**Ejecución:** [Ver detalles]($run_url)",
              "potentialAction": [{
                "@type": "OpenUri",
                "name": "Ver detalles del despliegue",
                "targets": [{ "os": "default", "uri": "'"$run_url"'" }]
              }]
            }')

          # Enviar notificación
          curl -X POST \
            "${{ secrets.TEAMS_WEBHOOK_URI }}" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD"